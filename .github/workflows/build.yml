name: Build Project, push image and release

on:
  push:
  workflow_dispatch:

env:
  DOCKER_NETWORK: ip6net
  PROJECT_FILE: "Fortalia.uproject"
  ENGINE_VERSION: "5.6.1"
  CONFIG: "Shipping"

jobs:
  package:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Manual cleanup by deleting unused software
        run: >
          sudo rm -rf
          "$AGENT_TOOLSDIRECTORY"
          /opt/google/chrome
          /opt/microsoft/msedge
          /opt/microsoft/powershell
          /opt/hostedtoolcache/CodeQL
          /opt/pipx
          /opt/ghc
          /usr/lib/mono
          /usr/local/.ghcup
          /usr/local/julia*
          /usr/local/lib/android
          /usr/local/lib/node_modules
          /usr/local/share/boost
          /usr/local/share/chromium
          /usr/local/share/powershell
          /usr/share/dotnet
          /usr/share/swift
        
      - name: Setup docker network
        run: docker network create --ipv6 --subnet 2001:0DB8::/112 ${{ env.DOCKER_NETWORK }}

      - name: Allow Docker to write to the Project Directory
        run: sudo chmod -R a+rw ${{ github.workspace }}

      - uses: addnab/docker-run-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
          registry: ghcr.io
          image: ghcr.io/epicgames/unreal-engine:dev-slim-${{ env.ENGINE_VERSION }}
          options: -v ${{ github.workspace }}:/project
          docker_network: ${{ env.DOCKER_NETWORK }}
          run: >
            /home/ue4/UnrealEngine/Engine/Build/BatchFiles/RunUAT.sh
            BuildCookRun
            -utf8output
            -platform=Linux
            -clientconfig=${{ env.CONFIG }}
            -serverconfig=${{ env.CONFIG }}
            -project="/project/${{ env.PROJECT_FILE }}"
            -noP4 -nodebuginfo -allmaps
            -cook -build -stage -prereqs -pak -archive
            -archivedirectory="/project/packaged/${{ env.CONFIG }}"
      - name: Archive ${{ env.CONFIG }} build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          cwd: '${{ github.workspace }}/packaged/${{ env.CONFIG }}'
          files: |
            Linux
          outPath: '${{ github.workspace }}/${{ github.event.repository.name }}-Linux.tar.gz'