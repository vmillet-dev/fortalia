version: 2.1

orbs:
  win: circleci/windows@5.1.0
  github-release: circleci/github-cli@2.7.2

jobs:
  build-unreal-project:
    executor:
      name: win/server-2022
      size: large
      shell: powershell.exe
    steps:
      - checkout

      - run:
          name: Docker Login
          command: echo $env:DOCKER_PASSWORD | docker login -u $env:DOCKER_USERNAME --password-stdin  
      
      - run:
          name: Pull Unreal Engine image
          no_output_timeout: 40m
          command: docker pull $env:UE5_DOCKER_IMAGE
      
      - run:
          name: Build and Cook UE Project
          command: |
            $projectPath = "C:\$env:PROJECT_NAME"
            $checkoutPath = $PWD.Path
            
            docker run --rm -v "${checkoutPath}:${projectPath}" $env:UE5_DOCKER_IMAGE `
              Engine\Build\BatchFiles\RunUAT.bat BuildCookRun `
              -project="${projectPath}\$env:PROJECT_NAME.uproject" `
              -noP4 `
              -platform=Win64 `
              -clientconfig=Shipping `
              -build `
              -cook `
              -stage `
              -package `
              -pak `
              -compressed `
              -archive `
              -archivedirectory="${projectPath}\Build" `
              -nodebuginfo `
              -encryptinifiles
      
      - run:
          name: Zip Build Output
          command: |
            $buildPath = "Build\Windows"
            $zipPath = "Build\$env:PROJECT_NAME-Windows.zip"
            
            Write-Host "Compressing build output from $buildPath"
            
            if (Test-Path $buildPath) {
              Compress-Archive -Path "$buildPath\*" -DestinationPath $zipPath -Force
              Write-Host "Build archived to $zipPath"
            } else {
              Write-Error "Build path $buildPath not found"
              exit 1
            }
      
      - store_artifacts:
          path: "Build/$env:PROJECT_NAME-Windows.zip"
          destination: unreal-build
      
      - github-release/install:
          token: GITHUB_TOKEN
      
      - run:
          name: Create GitHub Release and Upload
          command: |
            
            $tag = $env:CIRCLE_TAG
            $zipPath = "Build\$env:PROJECT_NAME-Windows.zip"
            
            # Si pas de tag, utiliser le numéro de build
            if ([string]::IsNullOrEmpty($tag)) {
              $tag = "build-$env:CIRCLE_BUILD_NUM"
            }
            
            Write-Host "Creating release for tag: $tag"
            
            # Créer la release et uploader le fichier
            gh release create $tag $zipPath `
              --repo "$env:CIRCLE_PROJECT_USERNAME/$env:CIRCLE_PROJECT_REPONAME" `
              --title "$env:PROJECT_NAME - $tag" `
              --notes "Automated build from CircleCI`n`nBuild #$env:CIRCLE_BUILD_NUM`nCommit: $env:CIRCLE_SHA1" `
              --prerelease

workflows:
  version: 2
  build-workflow:
    jobs:
      - build-unreal-project:
          context: github
          filters:
            tags:
              only: /.*/
